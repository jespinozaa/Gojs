@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gojs/1.8.25/go-debug.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gojs/1.7.7/go-debug.js"></script>
    <script type="text/javascript" src="https://code.jquery.com/jquery-1.11.3.min.js"></script>

            <script id="code" type="text/javascript">
                var arregloNodosPersona = [];

                var sum = 1500;
                var sumy = 1500;
                //Obtiene lista de NodosPersona
                $(function () {
                    $(document).ready(function () {
                        $.ajax({
                            type: "POST",
                            url: "/Graph/ObtenerNodos",
                            data: '{Id: "' + @ViewBag.Id + '" }',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            $.each(response, function (i) {
                                arregloNodosPersona.push({ key: response[i].NodeId, loc: "" + (3000.0001 + sum) + " " + (3000.0001 + sumy) + "", text: response[i].Nombre });
                                sum = sum + 20;
                                sumy = sumy + 100;
                            });
                            console.log(arregloNodosPersona)
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                });
            });

            //Obtiene arreglo vertices

            var arregloVertices = []
            $(function () {
                $(document).ready(function () {
                    $.ajax({
                        type: "POST",
                        url: "/Graph/ObtenerVertices",
                        data: '{Id: "' + @ViewBag.Id + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $.each(data, function (i) {

                        arregloVertices.push({ from: data[i].From, to: data[i].To, text: "Link de prueba" });
                    });
                    console.log(arregloVertices);
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        });
    });



    function init() {
        var $$ = go.GraphObject.make;  // for conciseness in defining templates

        myDiagram =
          $$(go.Diagram, "myDiagramDiv",  // must name or refer to the DIV HTML element
            {
                allowDrop: true,   // must be true to accept drops from the Palette
                // automatically show the state of the diagram's model on the page in a <PRE> element
                "ModelChanged": function (e) {
                    if (e.isTransactionFinished) {
                        document.getElementById("mySavedModel").textContent = myDiagram.model.toJson();
                    }
                },
                "undoManager.isEnabled": true
            });
        // define the Node template for regular nodes

        myDiagram.nodeTemplateMap.add("",
          $$(go.Node, go.Panel.Auto,
            new go.Binding("location", "loc", go.Point.parse).makeTwoWay(go.Point.stringify),

            $$(go.Shape,
              { figure: "Rectangle", fill: "orange", strokeWidth: 1, stroke: "lightgreen" },
             new go.Binding("stroke", "fill"),
            { portId: "", fromLinkable: true, toLinkable: true, cursor: "pointer" }),

         $$(go.TextBlock,
        {
            margin: 3
        },
        new go.Binding("text","text")

        )));


        myDiagram.linkTemplate =
          $$(go.Link,
            //{ curve: go.Link.Bezier },
           $$(go.Shape, { strokeWidth: 2, stroke: "green" }),
            $$(go.Shape, { toArrow: "OpenTriangle", stroke: "green" }),
             $$(go.TextBlock,
                {
                    height: 33
                },
                new go.Binding("text")
            ));

        // initialize the Palette that is on the left side of the page
        //myPalette =
        //  $$(go.Palette, "myPaletteDiv",  // must name or refer to the DIV HTML element
        //    {
        //        nodeTemplateMap: myDiagram.nodeTemplateMap,
        //        groupTemplateMap: myDiagram.groupTemplateMap
        //    });



        //myPalette.model = new go.GraphLinksModel([
        //  // a regular node
        //    { key: "A", source: "/Images/PlantaElevadora.png" },
        //    { key: "B", source: "/Images/SectorConsumo.png" },
        //    { key: "C", source: "/Images/Estanque.png" },
        //    { key: "D", source: "/Images/Fuente.png" },
        //    { key: "E", source: "/Images/Nodo.png" },
        //    { key: "F", source: "/Images/PlantaTratamiento.png" }
        //]);

        myDiagram.model = new go.GraphLinksModel(arregloNodosPersona, arregloVertices);
@*        //   EVENTOS CLICK
        myDiagram.addDiagramListener("ObjectDoubleClicked", function (e) {
            $(function () {
                var options = { "backdrop": "static", keyboard: true };
                $.ajax({
                    type: "POST",
                    url: "/Home/CargarNodo",
                    data: '{idNodo: "' + e.subject.part.data.key + '" , idSistema: "' + @ViewBag.Id +'" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        $.each(response, function (i) {
                            console.log(response[i]);
                            $('#LoadNode').context = response;
                            //var part = e.subject.part;
                        });

                        //arregloNodos.push({ key: response[i].IdNodo, source: response[i].Imagen, loc: "" + response[i].X + " " + response[i].Y + "" });
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });

            });
        });*@
    };


</script>
</head>
<body onload="setTimeout('init()',1000);">
    <div>
       <div id="myDiagramDiv" style="border: solid 1px black; height: 500px; background-image:url('../Content/img/mariomap.jpg')" ></div>
            <div><pre id="mySavedModel" style="width:100%;height:300px"></div>
@*       <script>
                        var $ = go.GraphObject.make;
                        var myDiagram =
                          $(go.Diagram, "myDiagramDiv",
                            {
                                "undoManager.isEnabled": true // enable Ctrl-Z to undo and Ctrl-Y to redo
                            });

                        var myModel = $(go.Model);
                        // in the model data, each node is represented by a JavaScript object:
                        myModel.nodeDataArray = [
                          { key: "Alpha" },
                          { key: "Beta" },
                          { key: "Gamma" }
                        ];
                        myDiagram.model = myModel;

    </script>  <!--Grafico basico-->*@

    </div>
</body>
</html>
